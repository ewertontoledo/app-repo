name: Build image -> Push to OCIR, Trivy Scan and Update Fleet repo

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      APP_NAME: "app-teste-2"
      APP_PORT: 9100
      TRIVY_FAIL_ON: "true"   # troque para "false" se não quiser que quebre

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to OCIR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.OCIR_REGISTRY }}
          username: ${{ secrets.OCIR_USERNAME }}
          password: ${{ secrets.OCIR_AUTH_TOKEN }}

      - name: Build and push image if not exists
        run: |
          IMAGE="${{ secrets.OCIR_REGISTRY }}/${{ secrets.IMAGE_NAMESPACE }}/poc/image/${APP_NAME}:${{ github.sha }}"
          echo "🔍 Verificando se a imagem já existe..."
          if docker manifest inspect "$IMAGE" > /dev/null 2>&1; then
            echo "✅ Imagem $IMAGE já existe"
          else
            echo "📦 Buildando e pushando $IMAGE..."
            docker build -t "$IMAGE" .
            docker push "$IMAGE"
          fi

      - name: Scan image with Trivy
        run: |
          IMAGE="${{ secrets.OCIR_REGISTRY }}/${{ secrets.IMAGE_NAMESPACE }}/poc/image/${APP_NAME}:${{ github.sha }}"
          echo "🔒 Escaneando $IMAGE com Trivy..."
          
          curl -sfL https://github.com/aquasecurity/trivy/releases/latest/download/trivy_0.65.0_Linux-64bit.tar.gz -o trivy.tar.gz
          tar zxvf trivy.tar.gz
          sudo mv trivy /usr/local/bin/

          mkdir -p trivy-reports

          # Sempre gera JSON, não quebra a pipeline aqui
          trivy image --exit-code 0 --severity HIGH,CRITICAL --format json -o trivy-reports/trivy-report.json "$IMAGE" || true

          echo "📄 Vulnerabilidades HIGH/CRITICAL:"
          jq '.Results[].Vulnerabilities[]? | {VulnerabilityID, Severity, PkgName, InstalledVersion, FixedVersion}' trivy-reports/trivy-report.json || echo "✅ Nenhuma vulnerabilidade crítica"

      - name: Generate upgrade suggestions JSON
        run: |
          jq '[.Results[].Vulnerabilities[]? 
               | select(.Severity=="HIGH" or .Severity=="CRITICAL") 
               | {
                   package: .PkgName,
                   current_version: .InstalledVersion,
                   suggested_fix: .FixedVersion,
                   severity: .Severity,
                   cve: .VulnerabilityID
                 }]' trivy-reports/tr
