name: Build, Scan & Update Fleet

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    env:
      APP_NAME: "app-teste-2"
      APP_PORT: 9000
      IMAGE_TAG: ${{ github.sha }}
      TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU & Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to OCIR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.OCIR_REGISTRY }}
          username: ${{ secrets.OCIR_USERNAME }}
          password: ${{ secrets.OCIR_AUTH_TOKEN }}

      - name: Build & Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.OCIR_REGISTRY }}/${{ secrets.IMAGE_NAMESPACE }}/poc/image/${{ env.APP_NAME }}:${{ env.IMAGE_TAG }}
          cache-from: type=registry,ref=${{ secrets.OCIR_REGISTRY }}/${{ secrets.IMAGE_NAMESPACE }}/poc/image/${{ env.APP_NAME }}:latest
          cache-to: type=registry,ref=${{ secrets.OCIR_REGISTRY }}/${{ secrets.IMAGE_NAMESPACE }}/poc/image/${{ env.APP_NAME }}:cache,mode=max

      - name: Scan Docker Image with Trivy
        uses: aquasecurity/trivy-action@v1
        id: trivy
        with:
          image-ref: ${{ secrets.OCIR_REGISTRY }}/${{ secrets.IMAGE_NAMESPACE }}/poc/image/${{ env.APP_NAME }}:${{ env.IMAGE_TAG }}
          format: json
          output: trivy-reports/trivy-report.json
          severity: HIGH,CRITICAL
          exit-code: 1
        continue-on-error: true

      - name: Upload Trivy Report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-reports/trivy-report.json

      - name: Generate Vulnerability Badge
        run: |
          mkdir -p badges
          COUNT=$(jq '[.Results[]?.Vulnerabilities[]? | select(.Severity=="HIGH" or .Severity=="CRITICAL")] | length' trivy-reports/trivy-report.json)
          if [ "$COUNT" -eq 0 ]; then
            STATUS="passing"
          elif [ "$COUNT" -le 5 ]; then
            STATUS="warning"
          else
            STATUS="critical"
          fi
          echo "{\"schemaVersion\":1,\"label\":\"Vulnerabilities\",\"message\":\"$COUNT HIGH/CRITICAL\",\"color\":\"$STATUS\"}" > badges/trivy-badge.json
        shell: bash

      - name: Notify Teams if Vulnerabilities Found
        if: failure()
        run: |
          ARTIFACT_ID=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts" \
            | jq -r '.artifacts[0].id')
          REPORT_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/${ARTIFACT_ID}"
          PAYLOAD="{\"text\": \"‚ö†Ô∏è Pipeline falhou no scan do Trivy para '${APP_NAME}'.\\nüîó Relat√≥rio: ${REPORT_URL}\"}"
          curl -H 'Content-Type: application/json' -d "$PAYLOAD" $TEAMS_WEBHOOK_URL

      - name: Update Fleet Repo Manifests
        if: success()
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Atualiza imagem e porta para ${{ env.APP_NAME }}:${{ env.IMAGE_TAG }} [ci skip]"
          branch: ${{ secrets.FLEET_BRANCH }}
          repository: ${{ secrets.FLEET_REPO_URL }}
          file_pattern: "k8s/apps/${{ env.APP_NAME }}/deployment.yaml"
          author_name: "github-actions[bot]"
          author_email: "github-actions[bot]@users.noreply.github.com"
