name: Build image -> Push to OCIR, Trivy Scan and Update Fleet repo

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      APP_NAME: "app-teste-2"
      APP_PORT: 9100
      TRIVY_FAIL_ON: "true"   # troque para "false" se n√£o quiser que quebre

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to OCIR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.OCIR_REGISTRY }}
          username: ${{ secrets.OCIR_USERNAME }}
          password: ${{ secrets.OCIR_AUTH_TOKEN }}

      - name: Build and push image if not exists
        run: |
          IMAGE="${{ secrets.OCIR_REGISTRY }}/${{ secrets.IMAGE_NAMESPACE }}/poc/image/${APP_NAME}:${{ github.sha }}"
          echo "üîç Verificando se a imagem j√° existe..."
          if docker manifest inspect "$IMAGE" > /dev/null 2>&1; then
            echo "‚úÖ Imagem $IMAGE j√° existe"
          else
            echo "üì¶ Buildando e pushando $IMAGE..."
            docker build -t "$IMAGE" .
            docker push "$IMAGE"
          fi

      - name: Scan image with Trivy
        run: |
          IMAGE="${{ secrets.OCIR_REGISTRY }}/${{ secrets.IMAGE_NAMESPACE }}/poc/image/${APP_NAME}:${{ github.sha }}"
          echo "üîí Escaneando $IMAGE com Trivy..."
          
          curl -sfL https://github.com/aquasecurity/trivy/releases/latest/download/trivy_0.65.0_Linux-64bit.tar.gz -o trivy.tar.gz
          tar zxvf trivy.tar.gz
          sudo mv trivy /usr/local/bin/

          mkdir -p trivy-reports

          if [[ "${TRIVY_FAIL_ON}" == "true" ]]; then
            trivy image --exit-code 1 --severity HIGH,CRITICAL --format json -o trivy-reports/trivy-report.json "$IMAGE"
          else
            trivy image --exit-code 0 --severity HIGH,CRITICAL --format json -o trivy-reports/trivy-report.json "$IMAGE" || true
          fi

          echo "üìÑ Vulnerabilidades HIGH/CRITICAL:"
          jq '.Results[].Vulnerabilities[]? | {VulnerabilityID, Severity, PkgName, InstalledVersion, FixedVersion}' trivy-reports/trivy-report.json || echo "‚úÖ Nenhuma vulnerabilidade cr√≠tica"

      - name: Update Fleet repo manifests
        env:
          FLEET_REPO: ${{ secrets.FLEET_REPO_URL }}
          FLEET_BRANCH: ${{ secrets.FLEET_BRANCH }}
          FLEET_PAT: ${{ secrets.FLEET_REPO_PAT }}
          IMAGE: ${{ secrets.OCIR_REGISTRY }}/${{ secrets.IMAGE_NAMESPACE }}/poc/image/${{ env.APP_NAME }}:${{ github.sha }}
          PORT: ${{ env.APP_PORT }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          REPO_NO_PROTO=${FLEET_REPO#https://}
          CLONE_URL="https://${FLEET_PAT}@${REPO_NO_PROTO}"
          BRANCH="${FLEET_BRANCH:-main}"
          git clone --depth 1 --branch "${BRANCH}" "${CLONE_URL}" fleet-repo
          cd fleet-repo || exit 1

          sudo apt-get update && sudo apt-get install -y jq
          curl -sL https://github.com/mikefarah/yq/releases/download/v4.45.1/yq_linux_amd64 -o yq
          chmod +x yq && sudo mv yq /usr/local/bin/

          MANIFEST="k8s/apps/${APP_NAME}/deployment.yaml"
          yq e -i '.spec.template.spec.containers[0].image = env(IMAGE)' "$MANIFEST"
          yq e -i '.spec.template.spec.containers[0].ports[0].containerPort = env(PORT)' "$MANIFEST"

          if git diff --quiet --exit-code; then
            echo "‚úÖ Nenhuma altera√ß√£o detectada"
          else
            git add "$MANIFEST"
            git commit -m "Atualiza imagem e porta para ${IMAGE}:${PORT} [ci skip]"
            git push origin "${BRANCH}"
            echo "‚úÖ Manifest atualizado"
          fi  

      - name: Upload Trivy report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-reports/trivy-report.json

      - name: Show Trivy JSON summary in log
        run: |
          echo "üîç Vulnerabilidades HIGH/CRITICAL detectadas:"
          jq '.' trivy-reports/trivy-report.json || echo "‚úÖ Nenhuma vulnerabilidade encontrada"